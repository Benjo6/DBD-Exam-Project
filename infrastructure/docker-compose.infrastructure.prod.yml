version: '3.8'
services:

## Postgres ##
  postgres:
    container_name: 'db-exam-postgres'
    build: 
      context: ./postgres
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          memory: 2048M
    ports:
      - 15432:5432
    volumes:
     - postgres_data:/var/lib/postgresql/data
    restart: always
    environment:
      POSTGRES_USER=${ADMIN_USER}
      POSTGRES_PASSWORD=${ADMIN_PASSWORD}

## Neo4j ##
  neo:
    container_name: db-exam-neo4j
    build: 
      context: ./neo4j
      dockerfile: Dockerfile
    hostname: db-exam-neo4j
    mem_limit: 600m
    memswap_limit: 6000m
    ports:
      - 17474:7474
      - 17687:7687
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/conf:/var/lib/neo4j/conf
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/import:/var/lib/neo4j/import
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*,gds.*
      - NEO4J_dbms_security_procedures_whitelist=apoc.*,algo.*,gds.*
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_AUTH=none
      - apoc.import.file.enabled=true


## Redis ##

  redis:
    container_name: db-exam-redis
    image: "redis:alpine"
    hostname: db-exam-redis
    mem_limit: 400m
    memswap_limit: 6000m
    restart: always
    ports:
      - "16379:6379"

## Redis ##

  nginx:
    container_name: db-exam-nginx
    image: "nginx:alpine"
    hostname: db-exam-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    
networks:
  default:
    name: db-exam

volumes:
  postgres_data: