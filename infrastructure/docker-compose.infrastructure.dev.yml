version: '2.4'
services:

  ## Postgres ##
  postgres:
    container_name: 'db-exam-postgres'
    image: postgres:14.2-alpine
    hostname: postgres
    mem_limit: 400m
    memswap_limit: 6000m
    ports:
      - 15432:5432
    volumes:
     - ./db/data:/var/lib/postgresql/data
     - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    environment:
      POSTGRES_USER: prescription_user
      POSTGRES_PASSWORD: prescription_pw

## Neo4j ##
  neo:
    container_name: db-exam-neo4j
    image: neo4j
    hostname: db-exam-neo4j
    mem_limit: 600m
    memswap_limit: 6000m
    ports:
      - 17474:7474
      - 17687:7687
    volumes:
      - ./neo4j/data:/data
      - ./neo4j/logs:/logs
      - ./neo4j/conf:/var/lib/neo4j/conf
      - ./neo4j/plugins:/var/lib/neo4j/plugins
      - ./neo4j/import:/var/lib/neo4j/import
    environment:
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*,gds.*
      - NEO4J_dbms_security_procedures_whitelist=apoc.*,algo.*,gds.*
      - NEO4JLABS_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_AUTH=none
      - apoc.import.file.enabled=true

## Mongo ##

  mongo:
    container_name: db-exam-mongo
    image: mongo
    hostname: db-exam-mongo
    mem_limit: 400m
    memswap_limit: 6000m
    restart: always
    ports:
      - 17017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongopw

  mongo-express:
    container_name: db-exam-mongo-express
    image: mongo-express
    restart: always
    ports:
      - 18081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongopw
      ME_CONFIG_MONGODB_URL: mongodb://mongo:mongopw@mongo:27017/

## Redis ##

  redis:
    container_name: db-exam-redis
    image: "redis:alpine"
    hostname: db-exam-redis
    mem_limit: 400m
    memswap_limit: 6000m
    restart: always
    ports:
      - "16379:6379"
    